{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/food.reducer.js","redux/reducers/groomer.reducer.js","redux/reducers/groomerDetails.reducer.js","redux/reducers/medication.reducer.js","redux/reducers/medicationDetail.reducer.js","redux/reducers/ownedPet.reducer.js","redux/reducers/petDetail.reducer.js","redux/reducers/petRegistration.reducer.js","redux/reducers/registration.reducer.js","redux/reducers/scanner.reducer.js","redux/reducers/showForm.reducer.js","redux/reducers/user.reducer.js","redux/reducers/vet.reducer.js","redux/reducers/vetDetail.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/barcode.saga.js","redux/sagas/food.saga.js","redux/sagas/groomer.saga.js","redux/sagas/login.saga.js","redux/sagas/medication.saga.js","redux/sagas/pet.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/vet.saga.js","redux/sagas/_root.saga.js","components/LogOutButton/LogOutButton.js","redux/mapStoreToProps.js","components/Nav/Nav.js","components/FoodComponents/FoodItem.js","components/FoodComponents/FoodList.js","components/BarCodeScanner/BarCodeScanner.js","pages/FoodPage/FoodPage.js","components/Footer/Footer.js","components/GroomerComponents/GroomerList.js","pages/GroomerPages/GroomerPage.js","components/GroomerComponents/GroomerItem.js","pages/GroomerPages/GroomerDetailPage.js","components/RegisterForm/RegForm4.js","components/RegisterForm/RegForm3.js","components/RegisterForm/RegForm2.js","components/RegisterForm/RegForm1.js","components/RegisterForm/RegisterForm.js","pages/LandingPage/LandingPage.js","components/LoginForm/LoginForm.js","pages/LoginPage/LoginPage.js","components/MedicationComponents/MedicationList.js","pages/MedicationPages/MedicationPage.js","components/MedicationComponents/MedicationItem.js","pages/MedicationPages/MedicationDetailPage.js","pages/PetDetailsPage/PetDetailsPage.js","components/ProtectedRoute/ProtectedRoute.js","pages/RegisterPage/RegisterPage.js","components/AddPetForm/AddPetForm.js","components/PetRender/PetRender.js","pages/UserPage/UserPage.js","components/VetComponents/VetList.js","pages/VetPages/VetPage.js","components/VetComponents/VetItem.js","pages/VetPages/VetDetailPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","foodReducer","payload","groomerReducer","groomerDetailReducer","medicationReducer","medicationDetailReducer","ownedPetReducer","petDetailReducer","petRegistrationReducer","registrationReducer","scannerReducer","showFormReducer","userReducer","vetReducer","vetDetailReducer","rootReducer","errors","food","groomer","groomerDetail","medication","medicationDetail","ownedPet","petDetail","petRegistration","registration","showForm","user","vet","vetDetail","barcodeSaga","postMedBarcode","postFoodBarcode","takeLatest","axios","post","id","data","put","console","log","foodSaga","getFood","postFood","putFood","deleteFood","delete","petId","get","response","groomerSaga","getGroomer","getGroomerDetail","postGroomer","putGroomer","deleteGroomer","loginUser","logoutUser","loginSaga","config","headers","withCredentials","status","medicationSaga","getMedication","getMedicationDetail","postMedication","putMedication","deleteMedication","petSaga","getPet","getPetDetail","postPet","registerUser","registrationSaga","pet","fetchUser","userSaga","vetSaga","getVet","getVetDetail","postVet","putVet","deleteVet","rootSaga","all","connect","props","className","onClick","dispatch","mapStoreToProps","reduxState","store","loginLinkData","path","text","to","FoodItem","newFood","brand","barcode","add","edit","event","setState","editSave","match","params","handleInputChangeFor","propertyName","target","value","back","history","push","foodItem","this","onChange","barcodeData","Save","Edit","DeleteForever","Component","withRouter","FoodList","addSave","map","index","key","Grid","item","xs","placeholder","Button","useState","setData","useDispatch","width","height","onUpdate","err","result","scannerOff","apiKey","process","FoodPage","scanner","scannerData","scannerOn","getSearch","then","res","catch","error","container","spacing","maxWidth","justify","alignItems","Footer","GroomerList","groomerList","groomerItem","clearDate","DateTime","fromISO","date","toLocaleString","DATE_SHORT","location","name","GroomerPage","GroomerItem","newGroomer","GroomerDetailPage","required","RegForm4","step","weight","birthdate","sex","image","microchip","addStepFour","preventDefault","onSubmit","htmlFor","RegForm3","species","breed","addStepThree","RegForm2","email","phone","addStepTwo","RegForm1","username","password","addStepOne","RegisterForm","role","LandingPage","heading","onLogin","LoginForm","login","LoginPage","MedicationList","medicationList","medicationItem","start_date","clearDate2","end_date","dosage","doctor","description","MedicationPage","MedicationItem","newMedication","med","medItem","MedicationDetailPage","PetDetailsPage","backToUser","test","toFood","toGroomer","toVet","toMedicine","src","Fastfood","title","onMouseEnter","Bathtub","LocalPharmacy","LocalHospital","ComponentToShow","ComponentToProtect","component","authRedirect","otherProps","exact","from","RegisterPage","AddPetForm","submitPet","PetRender","toDetails","sm","md","UserPage","addPet","VetList","vetList","vetItem","reason","VetPage","VetItem","newVet","VetDetailPage","App","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a48fd32c.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return \"Oops! The username and password didn't match. Try again!\";\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const foodReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_FOOD':\n      return action.payload;\n    case 'UNSET_FOOD':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default foodReducer;\n","const groomerReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_GROOMER':\n      return action.payload;\n    case 'UNSET_GROOMER':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default groomerReducer;\n","const groomerDetailReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_GROOMER_DETAIL':\n      return action.payload;\n    case 'UNSET_GROOMER_DETAIL':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default groomerDetailReducer;\n","const medicationReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_MEDICATION':\n      return action.payload;\n    case 'UNSET_MEDICATION':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default medicationReducer;\n","const medicationDetailReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_MEDICATION_DETAIL':\n      return action.payload;\n    case 'UNSET_MEDICATION':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default medicationDetailReducer;\n","const ownedPetReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_PET':\n      return action.payload;\n    case 'UNSET_PET':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default ownedPetReducer;\n","const petDetailReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_PET_DETAIL':\n      return action.payload;\n    case 'UNSET_PET_DETAIL':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default petDetailReducer;\n","const petRegistrationReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_PET_REGISTRATION':\n      return { ...state, ...action.payload };\n    case 'UNSET_PET_REGISTRATION':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default petRegistrationReducer;\n","const registrationReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER_REGISTRATION':\n      return { ...state, ...action.payload };\n    case 'UNSET_USER_REGISTRATION':\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport default registrationReducer;\n","const scannerReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_SCANNER':\n      return action.payload;\n    case 'STOP_SCANNER':\n      return 'No data';\n    default:\n      return state;\n  }\n};\n\nexport default scannerReducer;\n","const showFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'SHOW_FORM':\n      return true;\n    case 'HIDE_FORM':\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default showFormReducer;\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const vetReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VET':\n      return action.payload;\n    case 'UNSET_VET':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default vetReducer;\n","const vetDetailReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VET_DETAIL':\n      return action.payload;\n    case 'UNSET_MEDICATION':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default vetDetailReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport food from './food.reducer';\nimport groomer from './groomer.reducer';\nimport groomerDetail from './groomerDetails.reducer';\nimport medication from './medication.reducer';\nimport medicationDetail from './medicationDetail.reducer';\nimport ownedPet from './ownedPet.reducer';\nimport petDetail from './petDetail.reducer';\nimport petRegistration from './petRegistration.reducer';\nimport registration from './registration.reducer';\nimport scannerReducer from './scanner.reducer';\nimport showForm from './showForm.reducer';\nimport user from './user.reducer';\nimport vet from './vet.reducer';\nimport vetDetail from './vetDetail.reducer';\n\nconst rootReducer = combineReducers({\n  errors,\n  food,\n  groomer,\n  groomerDetail,\n  medication,\n  medicationDetail,\n  ownedPet,\n  petDetail,\n  petRegistration,\n  registration,\n  scannerReducer,\n  showForm,\n  user,\n  vet,\n  vetDetail,\n});\n\nexport default rootReducer;\n","// this could have very easily been in medication saga, but it seemed more fun to extract this into its own file.\n\nimport { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* barcodeSaga() {\n  yield takeLatest('POST_MED_BARCODE', postMedBarcode);\n  yield takeLatest('POST_FOOD_BARCODE', postFoodBarcode);\n}\n\nfunction* postMedBarcode(action) {\n  try {\n    yield axios.post(\n      `/api/barcode/med/${action.payload.id}`,\n      action.payload.data\n    );\n    yield put({ type: 'GET_MEDICATION_DETAIL', payload: action.payload.id });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* postFoodBarcode(action) {\n  try {\n    yield axios.post(\n      `/api/barcode/food/${action.payload.id}`,\n      action.payload.data\n    );\n    yield put({ type: 'GET_FOOD', payload: action.payload.id });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default barcodeSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* foodSaga() {\n  yield takeLatest('GET_FOOD', getFood);\n  yield takeLatest('POST_FOOD', postFood);\n  yield takeLatest('PUT_FOOD', putFood);\n  yield takeLatest('DELETE_FOOD', deleteFood);\n\n  function* getFood(action) {\n    try {\n      const response = yield axios.get(`/api/food/${action.payload}`);\n      yield put({\n        type: 'SET_FOOD',\n        payload: response.data,\n      });\n    } catch (err) {\n      console.log(err);\n      yield put({\n        type: 'ERROR_MSG',\n        payload: 'There was a problem with FOOD GET',\n      });\n    }\n  }\n\n  function* postFood(action) {\n    try {\n      yield axios.post(`/api/food/${action.payload.id}`, action.payload);\n      yield put({ type: 'GET_FOOD', payload: action.payload.id });\n    } catch (err) {\n      console.log('ERROR POSTING food:', action.payload.id);\n    }\n  }\n\n  function* putFood(action) {\n    try {\n      yield axios.put(\n        `/api/food/editFood/${action.payload.id}`,\n        action.payload\n      );\n      yield put({ type: 'GET_FOOD', payload: action.payload.petId });\n      console.log(action.payload);\n    } catch (error) {\n      console.log('Error in put food', error);\n    }\n  }\n\n  function* deleteFood(action) {\n    try {\n      yield axios.delete(`/api/food/${action.payload.id}`);\n      yield put({ type: 'GET_FOOD', payload: action.payload.petId });\n    } catch (err) {\n      console.log('error deleting food:', action.payload);\n    }\n  }\n}\n\nexport default foodSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* groomerSaga() {\n  yield takeLatest('GET_GROOMER', getGroomer);\n  yield takeLatest('GET_GROOMER_DETAIL', getGroomerDetail);\n  yield takeLatest('POST_GROOMER', postGroomer);\n  yield takeLatest('PUT_GROOMER', putGroomer);\n  yield takeLatest('DELETE_GROOMER', deleteGroomer);\n}\n\nfunction* getGroomer(action) {\n  try {\n    const response = yield axios.get(`/api/groomer`);\n    yield put({\n      type: 'SET_GROOMER',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem with GROOMER GET',\n    });\n  }\n}\n\nfunction* getGroomerDetail(action) {\n  try {\n    const response = yield axios.get(`/api/groomer/details/${action.payload}`);\n    yield put({\n      type: 'SET_GROOMER_DETAIL',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'SET_ERROR',\n      payload: 'Could not get groomer details',\n    });\n  }\n}\n\nfunction* postGroomer(action) {\n  try {\n    yield axios.post(`/api/groomer/${action.payload.id}`, action.payload);\n    yield put({ type: 'GET_GROOMER', payload: action.payload.id });\n  } catch (err) {\n    console.log('ERROR POSTING groomer:', err, action.payload.id);\n  }\n}\n\nfunction* putGroomer(action) {\n  try {\n    yield axios.put(\n      `/api/groomer/editGroomer/${action.payload.id}`,\n      action.payload\n    );\n    yield put({ type: 'GET_GROOMER_DETAIL', payload: action.payload.petId });\n  } catch (error) {\n    console.log('Error in put groomer', error);\n  }\n}\n\nfunction* deleteGroomer(action) {\n  try {\n    yield axios.delete(`/api/groomer/${action.payload.id}`);\n    yield put({ type: 'GET_GROOMER' });\n    yield put({ type: 'GET_GROOMER_DETAIL', payload: action.payload.petId });\n  } catch (err) {\n    console.log('error deleting groomer:', action.payload);\n  }\n}\n\nexport default groomerSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: 'FETCH_USER' });\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* medicationSaga() {\n  yield takeLatest('GET_MEDICATION', getMedication);\n  yield takeLatest('GET_MEDICATION_DETAIL', getMedicationDetail);\n  yield takeLatest('POST_MEDICATION', postMedication);\n  yield takeLatest('PUT_MEDICATION', putMedication);\n  yield takeLatest('DELETE_MEDICATION', deleteMedication);\n}\n\nfunction* getMedication(action) {\n  try {\n    const response = yield axios.get(`/api/medication`);\n    yield put({\n      type: 'SET_MEDICATION',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem with MEDICATION GET',\n    });\n  }\n}\n\nfunction* getMedicationDetail(action) {\n  try {\n    const response = yield axios.get(\n      `/api/medication/details/${action.payload}`\n    );\n    yield put({\n      type: 'SET_MEDICATION_DETAIL',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem with MEDICATION GET',\n    });\n  }\n}\n\nfunction* postMedication(action) {\n  try {\n    yield axios.post(`/api/medication/${action.payload.id}`, action.payload);\n    yield put({ type: 'GET_MEDICATION', payload: action.payload.id });\n    yield put({ type: 'GET_MEDICATION_DETAIL', payload: action.payload.id });\n  } catch (err) {\n    console.log('ERROR POSTING medication:', action.payload.id);\n  }\n}\n\nfunction* putMedication(action) {\n  try {\n    console.log('in put', action.payload);\n    yield axios.put(\n      `/api/medication/editMedication/${action.payload.id}`,\n      action.payload\n    );\n    yield put({ type: 'GET_MEDICATION_DETAIL', payload: action.payload.petId });\n  } catch (error) {\n    console.log('Error in put food', error);\n  }\n}\n\nfunction* deleteMedication(action) {\n  try {\n    yield axios.delete(`/api/medication/${action.payload.id}`);\n    yield put({ type: 'GET_MEDICATION' });\n    yield put({ type: 'GET_MEDICATION_DETAIL', payload: action.payload.petId });\n  } catch (err) {\n    console.log('error deleting MEDICATION:', action.payload);\n  }\n}\n\nexport default medicationSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* petSaga() {\n  yield takeLatest('GET_PET', getPet);\n  yield takeLatest('GET_PET_DETAIL', getPetDetail);\n  yield takeLatest('POST_PET', postPet);\n}\n\nfunction* getPet(action) {\n  try {\n    const response = yield axios.get('/api/pet');\n    yield put({\n      type: 'SET_PET',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem with PET GET',\n    });\n  }\n}\n\nfunction* getPetDetail(action) {\n  try {\n    const response = yield axios.get(`/api/pet/details/${action.payload}`);\n    yield put({\n      type: 'SET_PET_DETAIL',\n      payload: response.data[0],\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'SET_ERROR',\n      payload: 'Could not get pet details',\n    });\n  }\n}\n\nfunction* postPet(action) {\n  try {\n    yield axios.post('/api/pet', action.payload);\n    yield put({ type: 'GET_PET' });\n  } catch (err) {\n    console.log('ERROR POSTING PET:', action.payload);\n  }\n}\n\nexport default petSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload.user);\n    yield axios.post('/api/user/login', action.payload.user);\n    // yield put({ type: 'LOGIN', payload: action.payload.user });\n    yield put({ type: 'POST_PET', payload: action.payload.pet });\n    yield put({ type: 'FETCH_USER' });\n\n    // automatically log a user in after registration\n\n    // set to 'login' mode so they see the login screen\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n    // after registration or after they log out\n\n    //worked before turning server on and off\n  } catch (error) {\n    console.log('Error with user registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* vetSaga() {\n  yield takeLatest('GET_VET', getVet);\n  yield takeLatest('GET_VET_DETAIL', getVetDetail);\n  yield takeLatest('POST_VET', postVet);\n  yield takeLatest('PUT_VET', putVet);\n  yield takeLatest('DELETE_VET', deleteVet);\n}\n\nfunction* getVet(action) {\n  try {\n    const response = yield axios.get(`/api/vet`);\n    yield put({\n      type: 'SET_VET',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem with VET GET',\n    });\n  }\n}\n\nfunction* getVetDetail(action) {\n  try {\n    const response = yield axios.get(`/api/vet/details/${action.payload}`);\n    yield put({\n      type: 'SET_VET_DETAIL',\n      payload: response.data,\n    });\n  } catch (err) {\n    console.log(err);\n    yield put({\n      type: 'ERROR_MSG',\n      payload: 'There was a problem with VET GET',\n    });\n  }\n}\n\nfunction* postVet(action) {\n  try {\n    yield axios.post(`/api/vet/${action.payload.id}`, action.payload);\n    yield put({ type: 'GET_VET', payload: action.payload.id });\n    yield put({ type: 'GET_VET_DETAIL', payload: action.payload.id });\n  } catch (err) {\n    console.log('ERROR POSTING  Vet:', err, action.payload.id);\n  }\n}\n\nfunction* putVet(action) {\n  try {\n    console.log('in put', action.payload);\n    yield axios.put(`/api/vet/editVet/${action.payload.id}`, action.payload);\n    yield put({ type: 'GET_VET_DETAIL', payload: action.payload.petId });\n  } catch (error) {\n    console.log('Error in put food', error);\n  }\n}\n\nfunction* deleteVet(action) {\n  try {\n    yield axios.delete(`/api/vet/${action.payload.id}`);\n    yield put({ type: 'GET_VET' });\n    yield put({ type: 'GET_VET_DETAIL', payload: action.payload.petId });\n  } catch (err) {\n    console.log('error deleting vet:', action.payload);\n  }\n}\n\nexport default vetSaga;\n","import { all } from 'redux-saga/effects';\nimport barcodeSaga from './barcode.saga';\nimport foodSaga from './food.saga';\nimport groomerSaga from './groomer.saga';\nimport loginSaga from './login.saga';\nimport medicationSaga from './medication.saga';\nimport petSaga from './pet.saga';\nimport registrationSaga from './registration.saga';\nimport userSaga from './user.saga';\nimport vetSaga from './vet.saga';\n\nexport default function* rootSaga() {\n  yield all([\n    barcodeSaga(),\n    foodSaga(),\n    groomerSaga(),\n    loginSaga(),\n    medicationSaga(),\n    petSaga(),\n    registrationSaga(),\n    userSaga(),\n    vetSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = (props) => (\n  <button\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </button>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","const mapStoreToProps = (reduxState) => {\n  return {\n    // reduxState properties bound to \"props.store\"\n    // ---------\n    store: reduxState,\n  };\n};\n\nexport default mapStoreToProps;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport './Nav.css';\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: '/login',\n    text: 'Login / Register',\n  };\n\n  if (props.store.user.id != null) {\n    loginLinkData.path = '/user';\n    loginLinkData.text = 'Home';\n  }\n\n  return (\n    <div className=\"nav\">\n      <Link to=\"/home\">\n        <h2 className=\"nav-title\">Pet Project</h2>\n      </Link>\n      <div className=\"nav-right\">\n        <Link className=\"nav-link\" to={loginLinkData.path}>\n          {/* Show this link if they are logged in or not,\n          but call this link 'Home' if they are logged in,\n          and call this link 'Login / Register' if they are not */}\n          {loginLinkData.text}\n        </Link>\n        {/* Show the link to the info page and the logout button if the user is logged in */}\n        {props.store.user.id && (\n          <>\n            <Link className=\"nav-link\" to=\"/groomer\">\n              Groomers\n            </Link>\n            <Link className=\"nav-link\" to=\"/medication\">\n              Medication\n            </Link>\n            <Link className=\"nav-link\" to=\"/vet\">\n              Veterinarian\n            </Link>\n\n            <LogOutButton className=\"nav-link\" />\n          </>\n        )}\n        {/* Always show this link since the about page is not protected */}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(mapStoreToProps)(Nav);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever, Edit, Save } from '@material-ui/icons';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass FoodItem extends Component {\n  state = {\n    newFood: {\n      brand: '',\n      barcode: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  edit = (event) => {\n    this.setState({\n      edit: true,\n      newFood: {\n        ...this.props.food,\n      },\n    });\n  };\n\n  editSave = (event, id) => {\n    this.props.dispatch({\n      type: 'PUT_FOOD',\n      payload: {\n        ...this.props.food,\n        ...this.state.newFood,\n        petId: this.props.match.params.id,\n      },\n    });\n    this.setState({\n      edit: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_FOOD',\n      payload: { id: id, petId: this.props.match.params.id },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newFood: { ...this.state.newFood, [propertyName]: event.target.value },\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const foodItem = this.props.food != null ? this.props.food : {};\n    return (\n      // outer most element tr as row for foodList\n      <tr>\n        {this.state.edit ? (\n          <>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newFood.brand}\n                onChange={this.handleInputChangeFor('brand')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newFood.barcode}\n                onChange={this.handleInputChangeFor('barcode')}\n              />\n            </td>\n          </>\n        ) : (\n          <>\n            <td>{foodItem.brand}</td>\n            <td>\n              {/* if the value of barcode is not manually input, use scanner-barcode-data. */}\n              {foodItem.barcode !== ''\n                ? foodItem.barcode\n                : this.props.barcodeData}\n            </td>\n          </>\n        )}\n\n        <td>\n          {this.state.edit ? (\n            <Save onClick={(event) => this.editSave(event, foodItem.id)}></Save>\n          ) : (\n            <Edit onClick={this.edit}></Edit>\n          )}\n          <DeleteForever onClick={(event) => this.delete(event, foodItem.id)} />\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(FoodItem));\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid } from '@material-ui/core';\n\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport FoodItem from './FoodItem';\n\nclass FoodList extends Component {\n  state = {\n    newFood: {\n      brand: '',\n      barcode: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  add = (event) => {\n    this.setState({\n      add: true,\n    });\n  };\n\n  addSave = (event) => {\n    this.props.dispatch({\n      type: 'POST_FOOD',\n      payload: { ...this.state.newFood, id: this.props.match.params.id },\n    });\n    this.setState({\n      add: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_FOOD',\n      payload: { id: id, petId: this.props.match.params.id },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newFood: { ...this.state.newFood, [propertyName]: event.target.value },\n    });\n  };\n\n  render() {\n    const foodItem = this.props.store.food.map((food, index) => {\n      return (\n        <FoodItem\n          key={index}\n          food={food}\n          barcodeData={this.props.barcodeData}\n        />\n      ); //each row of information\n    });\n    return (\n      <Grid item xs={12}>\n        <div>\n          <h2 className=\"Heading\"> Food</h2>\n          <table>\n            <thead>\n              <tr className=\"thRow\">\n                <th>Brand</th>\n                <th>Barcode</th>\n                <th>Edit</th>\n              </tr>\n            </thead>\n            <tbody>{foodItem}</tbody>\n\n            {this.state.add ? (\n              <>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={this.state.newFood.brand}\n                    placeholder=\"New Brand\"\n                    onChange={this.handleInputChangeFor('brand')}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"text\"\n                    value={this.state.newFood.barcode}\n                    placeholder=\"New Barcode\"\n                    onChange={this.handleInputChangeFor('barcode')}\n                  />\n                </td>\n                <td>\n                  <Button onClick={this.addSave}>Save</Button>\n                </td>\n              </>\n            ) : (\n              <>\n                <Button onClick={this.back}>Back</Button>\n                <Button onClick={this.add}>Add Brand</Button>\n              </>\n            )}\n          </table>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(FoodList));\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { connect, useDispatch } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport BarcodeScannerComponent from 'react-webcam-barcode-scanner';\n\n//--To Do\n//Need to find a way to capture data and off camera automatically.\n//Need an api route for barcode information\n//Need a route to database\n\nconst Scanner = (props) => {\n  const [data, setData] = useState('Not Found');\n  const dispatch = useDispatch();\n\n  const clickCapture = () => {\n    dispatch({ type: 'SCANNER', payload: { data } });\n  };\n\n  return (\n    <>\n      <BarcodeScannerComponent\n        width={300}\n        height={300}\n        onUpdate={(err, result) => {\n          if (result) setData(result.text);\n          else setData('Not Found');\n        }}\n      />\n      {/* if data not found, keep scanner on. If data found, turn off and record data. */}\n      {data !== 'Not Found'\n        ? props.scannerOff(false, data)\n        : props.scannerOff(true, data)}\n    </>\n  );\n};\n\nexport default connect(mapStoreToProps)(Scanner);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport FoodList from '../../components/FoodComponents/FoodList';\nimport Scanner from '../../components/BarCodeScanner/BarCodeScanner';\n\nconst apiKey = process.env.REACT_APP_UPCLOOKUP;\n\nclass FoodPage extends Component {\n  state = {\n    scanner: '',\n    scannerData: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_FOOD',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  scannerOn = (event) => {\n    this.setState({\n      scanner: true,\n    });\n  };\n\n  scannerOff = (status, value) => {\n    this.getSearch(value);\n    console.log(value);\n    this.setState({\n      scanner: status,\n      scannerData: value,\n    });\n  };\n\n  getSearch = (value) => {\n    if (value !== 'Not Found') {\n      axios\n        .get(`https://api.upcdatabase.org/product/${value}?apikey=${apiKey}`)\n        .then((res) => {\n          console.log('in food', res.data);\n          this.props.dispatch({\n            type: 'POST_FOOD_BARCODE',\n            payload: {\n              id: this.props.match.params.id,\n              data: res.data,\n            },\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  // upc api request here.\n\n  render() {\n    return (\n      <Grid\n        container\n        spacing={1}\n        maxWidth=\"sm\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <FoodList barcodeData={this.state.scannerData} />\n        {this.state.scanner ? (\n          <>\n            <Scanner scannerOff={this.scannerOff} />\n          </>\n        ) : (\n          <Grid\n            container\n            spacing={1}\n            maxWidth=\"sm\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Button onClick={this.scannerOn}>Scan Barcode</Button>\n          </Grid>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(FoodPage);\n","import React from 'react';\nimport './Footer.css';\n\nconst Footer = () => <footer>&copy; Pet Project</footer>;\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { DateTime } from 'luxon';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever } from '@material-ui/icons';\n\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass GroomerList extends Component {\n  back = (event) => {\n    this.props.history.push(`/user`);\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_GROOMER',\n      payload: { id, petId: this.props.match.params.id },\n    });\n  };\n\n  render() {\n    const groomerList = this.props.store.groomer.map((groomerItem, index) => {\n      const date = DateTime.fromISO(groomerItem.date);\n      const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n      return (\n        <tr className=\"tbRow\" key={index}>\n          <td>{groomerItem.groomer}</td>\n          <td>{clearDate}</td>\n          <td>{groomerItem.location}</td>\n          <td>{groomerItem.name}</td>\n          <td>\n            <DeleteForever\n              onClick={(event) => this.delete(event, groomerItem.id)}\n            />\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr className=\"thRow\">\n              <th>Groomer</th>\n              <th>Date</th>\n              <th>Location</th>\n              <th>For</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>{groomerList}</tbody>\n          <Button onClick={this.back}>Back</Button>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(GroomerList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport GroomerList from '../../components/GroomerComponents/GroomerList';\n\nclass GroomerPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_GROOMER',\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"Heading\">Grooming Appointments</h2>\n        <div>\n          <GroomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(GroomerPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever, Edit, Save } from '@material-ui/icons';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { DateTime } from 'luxon';\n\nclass GroomerItem extends Component {\n  state = {\n    newGroomer: {\n      groomer: '',\n      date: '',\n      location: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  edit = (event) => {\n    this.setState({\n      edit: true,\n      newGroomer: {\n        ...this.props.groomer,\n      },\n    });\n  };\n\n  editSave = (event) => {\n    this.props.dispatch({\n      type: 'PUT_GROOMER',\n      payload: {\n        ...this.props.groomer,\n        ...this.state.newGroomer,\n        petId: this.props.match.params.id,\n      },\n    });\n    this.setState({\n      edit: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_GROOMER',\n      payload: { id, petId: this.props.match.params.id },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newGroomer: {\n        ...this.state.newGroomer,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const groomerItem = this.props.groomer != null ? this.props.groomer : {};\n    const date = DateTime.fromISO(this.props.groomer.date);\n    const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n\n    return (\n      <tr>\n        {this.state.edit ? (\n          <>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newGroomer.groomer}\n                onChange={this.handleInputChangeFor('groomer')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newGroomer.date}\n                onChange={this.handleInputChangeFor('date')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newGroomer.location}\n                onChange={this.handleInputChangeFor('location')}\n              />\n            </td>\n          </>\n        ) : (\n          <>\n            <td>{groomerItem.groomer}</td>\n            <td>{clearDate}</td>\n            <td>{groomerItem.location}</td>\n          </>\n        )}\n        <td>\n          {this.state.edit ? (\n            <Save\n              onClick={(event) => this.editSave(event, groomerItem.id)}\n            ></Save>\n          ) : (\n            <>\n              <Edit onClick={this.edit}></Edit>\n              <DeleteForever\n                onClick={(event) => this.delete(event, groomerItem.id)}\n              ></DeleteForever>\n            </>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(GroomerItem));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport GroomerItem from '../../components/GroomerComponents/GroomerItem';\n\nclass GroomerDetailPage extends Component {\n  state = {\n    newGroomer: {\n      groomer: '',\n      date: '',\n      location: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_GROOMER_DETAIL',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  add = (event) => {\n    this.setState({\n      add: true,\n    });\n  };\n\n  addSave = (event) => {\n    this.props.dispatch({\n      type: 'POST_GROOMER',\n      payload: { ...this.state.newGroomer, id: this.props.match.params.id },\n    });\n    this.props.dispatch({\n      type: 'GET_GROOMER_DETAIL',\n      payload: this.props.match.params.id,\n    });\n    this.setState({\n      add: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_GROOMER',\n      payload: id,\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newGroomer: {\n        ...this.state.newGroomer,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const groomerList = this.props.store.groomerDetail.map((groomer, index) => {\n      return <GroomerItem key={index} groomer={groomer} />;\n    });\n    return (\n      <div>\n        <h2 className=\"Heading\">Grooming Appointments</h2>\n\n        <table>\n          <thead>\n            <tr className=\"thRow\">\n              <th>Groomer</th>\n              <th>Date</th>\n              <th>Location</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>{groomerList}</tbody>\n          {this.state.add ? (\n            <>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newGroomer.groomer}\n                  onChange={this.handleInputChangeFor('groomer')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newGroomer.date}\n                  onChange={this.handleInputChangeFor('date')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newGroomer.location}\n                  onChange={this.handleInputChangeFor('location')}\n                  required\n                />\n              </td>\n              <td>\n                <Button onClick={this.addSave}>Save</Button>\n              </td>\n            </>\n          ) : (\n            <>\n              <Button onClick={this.back}>Back</Button>\n              <Button onClick={this.add}>Add Appointment</Button>\n            </>\n          )}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(GroomerDetailPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass RegForm4 extends Component {\n  state = {\n    step: 4,\n    weight: '',\n    birthdate: '',\n    sex: '',\n    image: '',\n    microchip: '',\n  };\n\n  addStepFour = (event) => {\n    //dispatches remaining pet information to be registered\n    event.preventDefault();\n    this.props.dispatch({\n      type: 'REGISTER',\n      payload: {\n        user: this.props.store.registration,\n        pet: {\n          ...this.props.store.petRegistration,\n          weight: this.state.weight,\n          birthdate: this.state.birthdate,\n          sex: this.state.sex,\n          image: this.state.image,\n          microchip: this.state.microchip,\n        },\n      },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.addStepFour}>\n          <h2>Register User 4/4</h2>\n          <div>\n            <label htmlFor=\"weight\">\n              weight:\n              <input\n                type=\"text\"\n                name=\"weight\"\n                value={this.state.weight}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('weight')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"birthdate\">\n              Birth Day:\n              <input\n                type=\"text\"\n                name=\"birthdate\"\n                value={this.state.birthdate}\n                placeholder=\"dd-mm-yy\"\n                onChange={this.handleInputChangeFor('birthdate')}\n                required\n              />\n            </label>\n            <br />\n            <label htmlFor=\"sex\">\n              Sex:\n              <input\n                type=\"text\"\n                name=\"sex\"\n                value={this.state.sex}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('sex')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"image\">\n              Image:\n              <input\n                type=\"text\"\n                name=\"image\"\n                value={this.state.image}\n                placeholder=\"(optional (url))\"\n                onChange={this.handleInputChangeFor('image')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"microchip\">\n              Microchip:\n              <input\n                type=\"text\"\n                name=\"microchip\"\n                value={this.state.microchip}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('microchip')}\n              />\n            </label>\n          </div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Done\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegForm4);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport RegForm4 from './RegForm4';\n\nclass RegForm3 extends Component {\n  state = {\n    step: 3,\n    name: '',\n    species: '',\n    breed: '',\n  };\n\n  addStepThree = (event) => {\n    //on click sets step state to 4 and dispatches this\n    //form info to registration reducer.\n    event.preventDefault();\n    this.setState({\n      step: 4,\n    });\n    this.props.dispatch({\n      type: 'SET_PET_REGISTRATION',\n      payload: {\n        name: this.state.name,\n        species: this.state.species,\n        breed: this.state.breed,\n      },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.step === 3 ? (\n          <form onSubmit={this.addStepThree}>\n            <h2>Register User 3/4</h2>\n            <div>\n              <label htmlFor=\"name\">\n                Pet Name:\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={this.state.name}\n                  required\n                  onChange={this.handleInputChangeFor('name')}\n                />\n              </label>\n              <br />\n              <label htmlFor=\"Species\">\n                Species:\n                <input\n                  type=\"text\"\n                  name=\"species\"\n                  value={this.state.species}\n                  required\n                  placeholder=\"Dog? Cat?\"\n                  onChange={this.handleInputChangeFor('species')}\n                />\n              </label>\n              <br />\n              <label htmlFor=\"Breed\">\n                Breed:\n                <input\n                  type=\"text\"\n                  name=\"breed\"\n                  value={this.state.breed}\n                  placeholder=\"(optional)\"\n                  onChange={this.handleInputChangeFor('breed')}\n                />\n              </label>\n            </div>\n            <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Next\" />\n          </form>\n        ) : (\n          <RegForm4 />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegForm3);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport RegForm3 from './RegForm3';\n\nclass RegForm2 extends Component {\n  state = {\n    step: 2,\n    email: '',\n    phone: '',\n  };\n\n  addStepTwo = (event) => {\n    //on click sets step state to 3 and dispatches this\n    //form info to registration reducer.\n    event.preventDefault();\n    this.setState({\n      step: 3,\n    });\n    this.props.dispatch({\n      type: 'SET_USER_REGISTRATION',\n      payload: {\n        email: this.state.email,\n        phone: this.state.phone,\n      },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.step === 2 ? (\n          <form onSubmit={this.addStepTwo}>\n            <h2>Register User 2/4</h2>\n            <div>\n              <label htmlFor=\"email\">\n                Email:\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  value={this.state.email}\n                  required\n                  onChange={this.handleInputChangeFor('email')}\n                />\n              </label>\n              <br />\n              <label htmlFor=\"phone\">\n                Phone:\n                <input\n                  type=\"text\"\n                  name=\"phone\"\n                  value={this.state.phone}\n                  required\n                  onChange={this.handleInputChangeFor('phone')}\n                />\n              </label>\n            </div>\n            <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Next\" />\n          </form>\n        ) : (\n          <RegForm3 />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegForm2);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport RegForm2 from './RegForm2';\n\nclass RegForm1 extends Component {\n  state = {\n    step: 1,\n    username: '',\n    password: '',\n  };\n\n  addStepOne = (event) => {\n    //on click sets step state to 2 and dispatches this\n    //forms info to registration reducer.\n    event.preventDefault();\n    this.setState({\n      step: 2,\n    });\n    this.props.dispatch({\n      type: 'SET_USER_REGISTRATION',\n      payload: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    //  this conditional renders RegForm 2 on click\n    //by setting step state to 2.\n    return (\n      <div>\n        {/* condition that renders reg form 1 if step state is 1. \n        Else it renders reg form 2. */}\n        {this.state.step === 1 ? (\n          <form onSubmit={this.addStepOne}>\n            <h2>Register User 1/4</h2>\n            <div>\n              <label htmlFor=\"username\">\n                Username:\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  required\n                  onChange={this.handleInputChangeFor('username')}\n                />\n              </label>\n            </div>\n            <div>\n              <label htmlFor=\"password\">\n                Password:\n                <input\n                  type=\"text\"\n                  name=\"password\"\n                  value={this.state.password}\n                  required\n                  onChange={this.handleInputChangeFor('password')}\n                />\n              </label>\n            </div>\n            <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Next\" />\n          </form>\n        ) : (\n          <RegForm2 />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegForm1);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport RegForm1 from './RegForm1';\n\n//---To Do\n//Rewrite forms 1-4 into material ui stepper component.\n\nclass RegisterForm extends Component {\n  render() {\n    return (\n      <div className=\"formPanel\">\n        {this.props.store.errors.registrationMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.registrationMessage}\n          </h3>\n        )}\n        <div>\n          {/* Rendering form in 3 parts starting here */}\n          <RegForm1 />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport './LandingPage.css';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\n\nclass LandingPage extends Component {\n  state = {\n    heading: 'Welcome to Pet Project',\n  };\n\n  onLogin = (event) => {\n    this.props.history.push('/login');\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>{this.state.heading}</h2>\n\n        <div className=\"grid\">\n          <div className=\"grid-col grid-col_8\"></div>\n          <div className=\"grid-col grid-col_4\">\n            <RegisterForm />\n\n            <center>\n              <h4>Already a Member?</h4>\n              <button className=\"btn btn_sizeSm\" onClick={this.onLogin}>\n                Login\n              </button>\n            </center>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LandingPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      //unset pet and detail work to prevent second logged in user from viewing previous user's pets\n      this.props.dispatch({\n        type: 'UNSET_PET',\n      });\n      this.props.dispatch({\n        type: 'UNSET_PET_DETAIL',\n      });\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n      //further prevents second user from seeing previous user details by routing them directly to userpage.\n      this.props.history.push('/user');\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"formPanel\" onSubmit={this.login}>\n        <h2>Login</h2>\n        {this.props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {this.props.store.errors.loginMessage}\n          </h3>\n        )}\n        <div>\n          <label htmlFor=\"username\">\n            Username:\n            <input\n              type=\"text\"\n              name=\"username\"\n              required\n              value={this.state.username}\n              onChange={this.handleInputChangeFor('username')}\n            />\n          </label>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Password:\n            <input\n              type=\"password\"\n              name=\"password\"\n              required\n              value={this.state.password}\n              onChange={this.handleInputChangeFor('password')}\n            />\n          </label>\n        </div>\n        <div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Log In\" />\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(LoginForm));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\nimport LoginForm from '../../components/LoginForm/LoginForm';\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <div>\n        <LoginForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/registration');\n            }}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { DateTime } from 'luxon';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever } from '@material-ui/icons';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass MedicationList extends Component {\n  back = (event) => {\n    this.props.history.push(`/user`);\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_MEDICATION',\n      payload: { id, petId: this.props.match.params.id },\n    });\n  };\n\n  render() {\n    const medicationList = this.props.store.medication.map(\n      (medicationItem, index) => {\n        const date = DateTime.fromISO(medicationItem.start_date);\n        const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n        const date2 = DateTime.fromISO(medicationItem.end_date);\n        const clearDate2 = date2.toLocaleString(DateTime.DATE_SHORT);\n        return (\n          <tr className=\"tbRow\" key={index}>\n            <td>{medicationItem.brand}</td>\n            <td>{medicationItem.dosage}</td>\n            <td>{clearDate}</td>\n            <td>{clearDate2}</td>\n            <td>{medicationItem.doctor}</td>\n            <td>{medicationItem.description}</td>\n            <td>{medicationItem.barcode}</td>\n            <td>{medicationItem.name}</td>\n            <td>\n              <DeleteForever\n                onClick={(event) => this.delete(event, medicationItem.id)}\n              ></DeleteForever>\n            </td>\n          </tr>\n        );\n      }\n    );\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr className=\"thRow\">\n              <th>Brand</th>\n              <th>Dosage</th>\n              <th>Prescribed</th>\n              <th>Completion</th>\n              <th>Veterinarian</th>\n              <th>Description</th>\n              <th>Barcode</th>\n              <th>For</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>{medicationList}</tbody>\n          <Button onClick={this.back}>Back</Button>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(MedicationList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport MedicationList from '../../components/MedicationComponents/MedicationList';\n\nclass MedicationPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_MEDICATION',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"Heading\">Medications</h2>\n        <div>\n          <MedicationList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(MedicationPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever, Edit, Save } from '@material-ui/icons';\nimport { DateTime } from 'luxon';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass MedicationItem extends Component {\n  state = {\n    newMedication: {\n      brand: '',\n      dosage: '',\n      start_date: '',\n      end_date: '',\n      doctor: '',\n      description: '',\n      barcode: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_MEDICATION_DETAIL',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  edit = (event) => {\n    this.setState({\n      edit: true,\n      newMedication: {\n        ...this.props.med,\n      },\n    });\n  };\n\n  editSave = (event) => {\n    this.props.dispatch({\n      type: 'PUT_MEDICATION',\n      payload: {\n        ...this.props.med,\n        ...this.state.newMedication,\n        petId: this.props.match.params.id,\n      },\n    });\n    this.setState({\n      edit: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_MEDICATION',\n      payload: { id, petId: this.props.match.params.id },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newMedication: {\n        ...this.state.newMedication,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const medItem = this.props.med != null ? this.props.med : {};\n    const date = DateTime.fromISO(this.props.med.start_date);\n    const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n    const date2 = DateTime.fromISO(this.props.med.end_date);\n    const clearDate2 = date2.toLocaleString(DateTime.DATE_SHORT);\n\n    return (\n      <tr>\n        {this.state.edit ? (\n          <>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.brand}\n                onChange={this.handleInputChangeFor('brand')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.dosage}\n                onChange={this.handleInputChangeFor('dosage')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.start_date}\n                onChange={this.handleInputChangeFor('start_date')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.end_date}\n                onChange={this.handleInputChangeFor('end_date')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.doctor}\n                onChange={this.handleInputChangeFor('doctor')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.description}\n                onChange={this.handleInputChangeFor('description')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newMedication.barcode}\n                onChange={this.handleInputChangeFor('barcode')}\n              />\n            </td>\n          </>\n        ) : (\n          <>\n            <td>{medItem.brand}</td>\n            <td>{medItem.dosage}</td>\n            <td>{clearDate}</td>\n            <td>{clearDate2}</td>\n            <td>{medItem.doctor}</td>\n            <td>{medItem.description}</td>\n            <td>\n              {medItem.barcode !== ''\n                ? medItem.barcode\n                : this.props.barcodeData}\n            </td>\n          </>\n        )}\n        <td>\n          {this.state.edit ? (\n            <Save onClick={this.editSave}></Save>\n          ) : (\n            <>\n              <Edit onClick={this.edit}></Edit>\n              <DeleteForever\n                onClick={(event) => this.delete(event, medItem.id)}\n              ></DeleteForever>\n            </>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(MedicationItem));\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Grid } from '@material-ui/core';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport MedicationItem from '../../components/MedicationComponents/MedicationItem';\nimport Scanner from '../../components/BarCodeScanner/BarCodeScanner';\n\nconst apiKey = process.env.REACT_APP_UPCLOOKUP;\n\nclass MedicationDetailPage extends Component {\n  state = {\n    newMedication: {\n      brand: '',\n      dosage: '',\n      start_date: '',\n      end_date: '',\n      doctor: '',\n      description: '',\n      barcode: '',\n    },\n    add: false,\n    edit: false,\n    scanner: '',\n    scannerData: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_MEDICATION_DETAIL',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  add = (event) => {\n    this.setState({\n      add: true,\n    });\n  };\n\n  addSave = (event) => {\n    this.props.dispatch({\n      type: 'POST_MEDICATION',\n      payload: { ...this.state.newMedication, id: this.props.match.params.id },\n    });\n    this.props.dispatch({\n      type: 'GET_MEDICATION_DETAIL',\n      payload: this.props.match.params.id,\n    });\n    this.setState({\n      add: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_MEDICATION',\n      payload: id,\n    });\n  };\n\n  getSearch = (value) => {\n    if (value !== 'Not Found') {\n      axios\n        .get(`https://api.upcdatabase.org/product/${value}?apikey=${apiKey}`)\n        .then((res) => {\n          console.log('in med', res.data);\n          this.props.dispatch({\n            type: 'POST_MED_BARCODE',\n            payload: {\n              id: this.props.match.params.id,\n              data: res.data,\n            },\n          });\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newMedication: {\n        ...this.state.newMedication,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  scannerOn = (event) => {\n    this.setState({\n      scanner: true,\n    });\n  };\n\n  scannerOff = (status, value) => {\n    this.getSearch(value);\n    console.log(value);\n    this.setState({\n      scanner: status,\n      scannerData: value,\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const medicationList = this.props.store.medicationDetail.map(\n      (med, index) => {\n        return (\n          <MedicationItem\n            key={index}\n            med={med}\n            barcodeData={this.state.scannerData}\n          />\n        );\n      }\n    );\n    return (\n      <div>\n        <h2 className=\"Heading\">Medications</h2>\n\n        <table>\n          <thead>\n            <tr className=\"thRow\">\n              <th>Brand</th>\n              <th>Dosage</th>\n              <th>Prescribed</th>\n              <th>Completion</th>\n              <th>Doctor</th>\n              <th>Description</th>\n              <th>Barcode</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>{medicationList}</tbody>\n          {this.state.add ? (\n            <>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.brand}\n                  onChange={this.handleInputChangeFor('brand')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.dosage}\n                  onChange={this.handleInputChangeFor('dosage')}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.start_date}\n                  onChange={this.handleInputChangeFor('start_date')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.end_date}\n                  onChange={this.handleInputChangeFor('end_date')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.doctor}\n                  onChange={this.handleInputChangeFor('doctor')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.description}\n                  onChange={this.handleInputChangeFor('description')}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newMedication.barcode}\n                  onChange={this.handleInputChangeFor('barcode')}\n                />\n              </td>\n              <td>\n                <Button onClick={this.addSave}>Save</Button>\n              </td>\n            </>\n          ) : (\n            <>\n              <Button onClick={this.back}>Back</Button>\n              <Button onClick={this.add}>Add Brand</Button>\n            </>\n          )}\n        </table>\n        <Grid\n          container\n          spacing={1}\n          maxWidth=\"sm\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          {this.state.scanner ? (\n            <>\n              <Scanner scannerOff={this.scannerOff} />\n            </>\n          ) : (\n            <Button onClick={this.scannerOn}>Scan Barcode</Button>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(MedicationDetailPage));\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { DateTime } from 'luxon';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Bathtub,\n  Fastfood,\n  LocalHospital,\n  LocalPharmacy,\n} from '@material-ui/icons';\n\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass PetDetailsPage extends Component {\n  state = {\n    placeholder:\n      'https://www.missingdogsuk.co.uk/wp-content/plugins/wp-job-manager-resumes/assets/images/candidate.png',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_PET_DETAIL',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  backToUser = (event) => {\n    this.props.history.push('/user');\n  };\n\n  test = (event) => {\n    console.log('This will need to be a gentle alert soon.');\n  };\n\n  toFood = (event) => {\n    this.props.history.push(`/food/${this.props.store.petDetail.id}`);\n  };\n  toGroomer = (event) => {\n    this.props.history.push(\n      `/groomer/details/${this.props.store.petDetail.id}`\n    );\n  };\n  toVet = (event) => {\n    this.props.history.push(`/vet/details/${this.props.store.petDetail.id}`);\n  };\n  toMedicine = (event) => {\n    this.props.history.push(\n      `/medication/details/${this.props.store.petDetail.id}`\n    );\n  };\n\n  render() {\n    const date = DateTime.fromISO(this.props.store.petDetail.birthdate);\n    const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n    return (\n      <Grid container spacing={10} alignItems=\"center\" justify=\"center\">\n        <Grid item>\n          <img\n            src={\n              this.props.store.petDetail.image != null\n                ? this.props.store.petDetail.image\n                : this.state.placeholder\n            }\n            className=\"pet\"\n          />\n          <p>\n            <strong>Name:</strong> {this.props.store.petDetail.name}\n          </p>\n          <p>\n            <strong>Species:</strong> {this.props.store.petDetail.species}\n          </p>\n          <p>\n            <strong>Breed:</strong> {this.props.store.petDetail.breed}\n          </p>\n          <p>\n            <strong>Weight:</strong> {this.props.store.petDetail.weight}\n          </p>\n          <p>\n            <strong>Birth Day</strong> {clearDate}\n          </p>\n          <p>\n            <strong>Sex:</strong> {this.props.store.petDetail.sex}\n          </p>\n          <br />\n          <Grid container alignItems=\"center\" justify=\"space-between\">\n            {/* Each icon needs an onMouseEnter with title floating above it.\n              Each icon needs to link to respective page. */}\n            <Fastfood\n              title=\"food\"\n              onClick={this.toFood}\n              onMouseEnter={this.test}\n            />\n            <Bathtub\n              title=\"groomer\"\n              onClick={this.toGroomer}\n              onMouseEnter={this.test}\n            />\n            <LocalPharmacy\n              title=\"Medicine\"\n              onClick={this.toMedicine}\n              onMouseEnter={this.test}\n            />\n            <LocalHospital\n              title=\"Vet\"\n              onClick={this.toVet}\n              onMouseEnter={this.test}\n            />\n          </Grid>\n\n          <Grid />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(PetDetailsPage));\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LoginPage from '../../pages/LoginPage/LoginPage';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  );\n};\n\nexport default connect(mapStoreToProps)(ProtectedRoute);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n// CUSTOM COMPONENTS\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  render() {\n    return (\n      <div>\n        <RegisterForm />\n\n        <center>\n          <button\n            type=\"button\"\n            className=\"btn btn_asLink\"\n            onClick={() => {\n              this.props.history.push('/login');\n            }}\n          >\n            Login\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass AddPetForm extends Component {\n  state = {\n    name: '',\n    species: '',\n    breed: '',\n    weight: '',\n    birthdate: '',\n    sex: '',\n    image: '',\n    microchip: '',\n  };\n\n  submitPet = (event) => {\n    this.props.dispatch({\n      type: 'POST_PET',\n      payload: this.state,\n    });\n    this.props.dispatch({\n      type: 'HIDE_FORM',\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.submitPet}>\n          <div>\n            <label htmlFor=\"name\">\n              Pet Name:\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                required\n                placeholder=\"Fido\"\n                onChange={this.handleInputChangeFor('name')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"Species\">\n              Species:\n              <input\n                type=\"text\"\n                name=\"species\"\n                value={this.state.species}\n                required\n                placeholder=\"Dog\"\n                onChange={this.handleInputChangeFor('species')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"birthdate\">\n              Birth Day:\n              <input\n                type=\"text\"\n                name=\"birthdate\"\n                value={this.state.birthdate}\n                placeholder=\"2-20-2020\"\n                onChange={this.handleInputChangeFor('birthdate')}\n                required\n              />\n            </label>\n            <br />\n            <label htmlFor=\"Breed\">\n              Breed:\n              <input\n                type=\"text\"\n                name=\"breed\"\n                value={this.state.breed}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('breed')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"weight\">\n              weight:\n              <input\n                type=\"text\"\n                name=\"weight\"\n                value={this.state.weight}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('weight')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"sex\">\n              Sex:\n              <input\n                type=\"text\"\n                name=\"sex\"\n                value={this.state.sex}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('sex')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"image\">\n              Image:\n              <input\n                type=\"text\"\n                name=\"image\"\n                value={this.state.image}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('image')}\n              />\n            </label>\n            <br />\n            <label htmlFor=\"microchip\">\n              Microchip:\n              <input\n                type=\"text\"\n                name=\"microchip\"\n                value={this.state.microchip}\n                placeholder=\"(optional)\"\n                onChange={this.handleInputChangeFor('microchip')}\n              />\n            </label>\n          </div>\n          <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Done!\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(AddPetForm));\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass PetRender extends Component {\n  state = {\n    placeholder:\n      'https://www.missingdogsuk.co.uk/wp-content/plugins/wp-job-manager-resumes/assets/images/candidate.png',\n  };\n\n  toDetails = (event) => {\n    this.props.history.push(`/details/${this.props.pet.id}`); //routes user to details of selected pet\n  };\n\n  render() {\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <div className=\"pet-center\">\n          <figure>\n            <img\n              className=\"pet\"\n              src={\n                this.props.pet.image != null\n                  ? this.props.pet.image\n                  : this.state.placeholder\n              }\n              onClick={this.toDetails}\n              value={this.props.pet.id}\n            />\n            <figcaption>\n              <strong>{this.props.pet.name}</strong>\n            </figcaption>\n          </figure>\n        </div>\n      </Grid>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(PetRender));\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport AddPetForm from '../../components/AddPetForm/AddPetForm';\nimport PetRender from '../../components/PetRender/PetRender';\n\nclass UserPage extends Component {\n  state = {\n    showForm: this.props.store.showForm,\n    placeholder:\n      'https://cdn1.iconfinder.com/data/icons/animals-95/300/cat-add-animal-pet-wild-domestic-512.png',\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_PET',\n    });\n  }\n\n  addPet = (event) => {\n    this.setState({\n      showForm: true,\n    });\n  };\n\n  render() {\n    const ownedPet = this.props.store.ownedPet.map((pet, index) => {\n      return <PetRender key={index} pet={pet} />; //renders owned pets to userpage as component.\n    });\n    return (\n      <div className=\"container\">\n        <h1 id=\"welcome\">Welcome, {this.props.store.user.username}!</h1>\n\n        <Grid container spacing={1}>\n          {ownedPet}\n          <Grid item xs={12} sm={6} md={4}>\n            {this.state.showForm ? (\n              <AddPetForm />\n            ) : (\n              <div className=\"pet-center\">\n                <img\n                  src={this.state.placeholder}\n                  className=\"pet\"\n                  onClick={this.addPet}\n                />\n              </div>\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(UserPage);\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { DateTime } from 'luxon';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever } from '@material-ui/icons';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass VetList extends Component {\n  back = (event) => {\n    this.props.history.push(`/user`);\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_VET',\n      payload: { id, petId: this.props.match.params.id },\n    });\n  };\n\n  render() {\n    const vetList = this.props.store.vet.map((vetItem, index) => {\n      const date = DateTime.fromISO(vetItem.date);\n      const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n      return (\n        <tr className=\"tbRow\" key={index}>\n          <td>{vetItem.doctor}</td>\n          <td>{clearDate}</td>\n          <td>{vetItem.location}</td>\n          <td>{vetItem.reason}</td>\n          <td>{vetItem.name}</td>\n          <td>\n            <DeleteForever\n              onClick={(event) => this.delete(event, vetItem.id)}\n            />\n          </td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr className=\"thRow\">\n              <th>Veterinarian</th>\n              <th>Date</th>\n              <th>Location</th>\n              <th>Reason</th>\n              <th>For</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>{vetList}</tbody>\n          <Button onClick={this.back}>Back</Button>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(VetList));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport VetList from '../../components/VetComponents/VetList';\n\nclass VetPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VET',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 className=\"Heading\">Vet Appointments</h2>\n        <div>\n          <VetList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(VetPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DeleteForever, Edit, Save } from '@material-ui/icons';\nimport { DateTime } from 'luxon';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nclass VetItem extends Component {\n  state = {\n    newVet: {\n      doctor: '',\n      reason: '',\n      date: '',\n      location: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VET_DETAIL',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  edit = (event) => {\n    this.setState({\n      edit: true,\n      newVet: {\n        ...this.props.vet,\n      },\n    });\n  };\n\n  editSave = (event) => {\n    this.props.dispatch({\n      type: 'PUT_VET',\n      payload: {\n        ...this.props.vet,\n        ...this.state.newVet,\n        petId: this.props.match.params.id,\n      },\n    });\n    this.setState({\n      edit: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_VET',\n      payload: { id, petId: this.props.match.params.id },\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newVet: {\n        ...this.state.newVet,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const vetItem = this.props.vet != null ? this.props.vet : {};\n    const date = DateTime.fromISO(this.props.vet.date);\n    const clearDate = date.toLocaleString(DateTime.DATE_SHORT);\n\n    return (\n      <tr>\n        {this.state.edit ? (\n          <>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newVet.doctor}\n                onChange={this.handleInputChangeFor('doctor')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newVet.reason}\n                onChange={this.handleInputChangeFor('reason')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newVet.date}\n                onChange={this.handleInputChangeFor('date')}\n              />\n            </td>\n            <td>\n              <input\n                type=\"text\"\n                value={this.state.newVet.location}\n                onChange={this.handleInputChangeFor('location')}\n              />\n            </td>\n          </>\n        ) : (\n          <>\n            <td>{vetItem.doctor}</td>\n            <td>{vetItem.reason}</td>\n            <td>{clearDate}</td>\n            <td>{vetItem.location}</td>\n          </>\n        )}\n        <td>\n          {this.state.edit ? (\n            <Save onClick={this.editSave}></Save>\n          ) : (\n            <>\n              <Edit onClick={this.edit}></Edit>\n              <DeleteForever\n                onClick={(event) => this.delete(event, vetItem.id)}\n              ></DeleteForever>\n            </>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(VetItem));\n","import React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\nimport VetItem from '../../components/VetComponents/VetItem';\n\nclass VetDetailPage extends Component {\n  state = {\n    newVet: {\n      doctor: '',\n      reason: '',\n      date: '',\n      location: '',\n    },\n    add: false,\n    edit: false,\n  };\n\n  componentDidMount() {\n    this.props.dispatch({\n      type: 'GET_VET_DETAIL',\n      payload: this.props.match.params.id,\n    });\n  }\n\n  add = (event) => {\n    this.setState({\n      add: true,\n    });\n  };\n\n  addSave = (event) => {\n    this.props.dispatch({\n      type: 'POST_VET',\n      payload: { ...this.state.newVet, id: this.props.match.params.id },\n    });\n    this.props.dispatch({\n      type: 'GET_VET_DETAIL',\n      payload: this.props.match.params.id,\n    });\n    this.setState({\n      add: false,\n    });\n  };\n\n  delete = (event, id) => {\n    this.props.dispatch({\n      type: 'DELETE_VET',\n      payload: id,\n    });\n  };\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      newVet: {\n        ...this.state.newVet,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  back = (event) => {\n    this.props.history.push(`/details/${this.props.match.params.id}`);\n  };\n\n  render() {\n    const vetList = this.props.store.vetDetail.map((vet, index) => {\n      return <VetItem key={index} vet={vet} />;\n    });\n\n    return (\n      <div>\n        <h2 className=\"Heading\">Veterinarian</h2>\n\n        <table>\n          <thead>\n            <tr className=\"thRow\">\n              <th>Veterinarian</th>\n              <th>Reason</th>\n              <th>Date</th>\n              <th>Location</th>\n              <th>Edit</th>\n            </tr>\n          </thead>\n          <tbody>{vetList}</tbody>\n          {this.state.add ? (\n            <>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newVet.doctor}\n                  onChange={this.handleInputChangeFor('doctor')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newVet.reason}\n                  onChange={this.handleInputChangeFor('reason')}\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newVet.date}\n                  onChange={this.handleInputChangeFor('date')}\n                  required\n                />\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  value={this.state.newVet.location}\n                  onChange={this.handleInputChangeFor('location')}\n                  required\n                />\n              </td>\n              <td>\n                <Button onClick={this.addSave}>Save</Button>\n              </td>\n            </>\n          ) : (\n            <>\n              <Button onClick={this.back}>Back</Button>\n              <Button onClick={this.add}>Add Appointment</Button>\n            </>\n          )}\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStoreToProps)(VetDetailPage));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport './App.css';\n\nimport Nav from '../Nav/Nav';\n\n// Custom Routes\n\nimport FoodPage from '../../pages/FoodPage/FoodPage';\nimport Footer from '../Footer/Footer';\nimport GroomerPage from '../../pages/GroomerPages/GroomerPage';\nimport GroomerDetailPage from '../../pages/GroomerPages/GroomerDetailPage';\nimport LandingPage from '../../pages/LandingPage/LandingPage';\nimport LoginPage from '../../pages/LoginPage/LoginPage';\nimport MedicationPage from '../../pages/MedicationPages/MedicationPage';\nimport MedicationDetailPage from '../../pages/MedicationPages/MedicationDetailPage';\nimport PetDetailsPage from '../../pages/PetDetailsPage/PetDetailsPage';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\nimport RegisterPage from '../../pages/RegisterPage/RegisterPage';\nimport UserPage from '../../pages/UserPage/UserPage';\nimport VetPage from '../../pages/VetPages/VetPage';\nimport VetDetailPage from '../../pages/VetPages/VetDetailPage';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' });\n  }\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n\n            {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the LoginPage (component).\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n            <ProtectedRoute\n              // logged in shows UserPage else shows LoginPage\n              exact\n              path=\"/user\"\n              component={UserPage}\n            />\n\n            {/* ------Custom Routes------*/}\n            <ProtectedRoute exact path=\"/food/:id\" component={FoodPage} />\n            <ProtectedRoute exact path=\"/groomer\" component={GroomerPage} />\n            <ProtectedRoute\n              exact\n              path=\"/groomer/details/:id\"\n              component={GroomerDetailPage}\n            />\n            <ProtectedRoute exact path=\"/vet\" component={VetPage} />\n            <ProtectedRoute\n              exact\n              path=\"/vet/details/:id\"\n              component={VetDetailPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/details/:id\"\n              component={PetDetailsPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/medication\"\n              component={MedicationPage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/medication/details/:id\"\n              component={MedicationDetailPage}\n            />\n\n            {/* ------Custom Routes------ */}\n\n            {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows LoginPage at /login\n              exact\n              path=\"/login\"\n              component={LoginPage}\n              authRedirect=\"/user\"\n            />\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows RegisterPage at \"/registration\"\n              exact\n              path=\"/registration\"\n              component={RegisterPage}\n              authRedirect=\"/user\"\n            />\n            <ProtectedRoute\n              // with authRedirect:\n              // - if logged in, redirects to \"/user\"\n              // - else shows LandingPage at \"/home\"\n              exact\n              path=\"/home\"\n              component={LandingPage} //CHANGE TO PRIVATE\n              authRedirect=\"/user\"\n            />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers/_root.reducer'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas/_root.saga'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}